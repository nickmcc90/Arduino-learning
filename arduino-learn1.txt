4/28/24

--PART 1: WHAT CAN AN ARDUINO DO--

It's a tool that helps you control electronic stuff with code. If you are going to
build a project with electronic stuff, you are going to need an arduino.

Electronic stuff is stuff like inputs and outputs.

Inputs: Temperature, light, touch, flex, distance sensors.
Outputs: DC motors, stepper motors, servo motors, led strips, buzzers, speakers.

Arduino stands in between these things and has logic in code that controls these things.

The Arduino Trifecta
1. Hardware
2. IDE
3. Code

Hardware
All arduino have a microcontroller on them. This allows us to read inputs and control outputs.

IDE
This is just the arduino software space for the code to be written on, that the arduino will read.

Code
Arduino code is called a sketch. The coding is basically like C and C++ with its own syntax
as well.

--PART 2: WHAT ARDUINO STUFF SHOULD I BUY?--
<timestamp: 5:33>

If I need electronic parts, I can look on Octopart.

This guy recommends buying an Arduino UNO Rev 3. It's really popular so
there are a lot of tutorials with it, and it has 20 different input ports.

There are a lot of different boards that look like arduino boards because
when arduino made their IDE, board, and code, it was all open source. So people
were allowed to make the exact same things and sell them themselves.

"Arduino compatible" means the board will work with the Arduino IDE.
<timestamp: 10:25. Going to get an Arduino now!>

<I got one!!>

--PART 3: WHAT'S ON AN ARDUINO BOARD?--
There's a black square with prongs called the micro controller. This is the brains of
the arduino, and the prongs are called GPIO. General purpose input output.

The plastic columns with holes in them on the sides are called headers. These holes
are meant for temporary connections to the microcontroller without having to sauter
something permanently.

Of the headers, the digital pins are listed 1-13. These are for inputs and outputs that are
on/off values (binary values). These pins can source 5 volts each. Pins with squiggly lines
mean that those pins are capable of pulse width modulation (PWM). This is good for servo motors
and fading lights. TX and RX are for LDS.

Of the headers, the ANALOG IN ones mean they are meant for continous signals (ones that are not
just on/off binary values.)
<timestamp: 17:22>

Something like reading a temperature would be put in these headers. We would use code to transform the
voltage output to a temperature.

Supplying power to the arduino is easy through USB to your computer. Or, you can you the DC Jack
(black thing), as long as you don't exceed 7-20 volts and a current of 1000 mA. Or, you put a voltage
source into the Vin pin near the POWER heading.

--PART 4: DOWNLOADING THE ARDUINO IDE--
You can use a web editor if you aren't on your normal computer, but the normal way is to
download the IDE.
<timestamp 23:28 About to get into the code>

When sketches get saved, they are saved in the arduino folder within Documents.

Once you have your board connected to your computer and selected, along with a port selected,
we can run and upload some sample code to the arduino.

<timestamp: 27:13. Next time, make cloud account and figure out how to get example blink code.>

<timestamp: 32:00. Going to talk about the web editor now.>

--PART 5: HOW TO USE VARIABLES--
Let's make a new sketch.

The setup and loop variables need to be in every sketch that you do.

Setup: Runs once.
Loop: Runs repeatedly.

Variables are declared by (type name equals value)
// bool Nick = true;

Bytes are small numbers from 0 to 255. You can use these for pin numbers (headers)

<timestamp 40:07. Yuuuuh>

Char holds one letter with single quotes.
char nick = 'A'

Char nick[] holds a string in double quotes.
char nick[] = "Apples"

We are able to declare and initialize all in one line of code instead of just declaring variables. Like this:

int nick = 8;

Instead of...

int nick;

nick = 8;


An interesting setup of an LED running program has a breadboard where one leg of the LED is
connected to ground, and the other is running through a resistor that is connected to pin 9
which is PWM.

Pinmode() is a special arduino function that changes the pins on the arduino board to either inputs
or outputs. It looks like this:

int led = 9;

void setup() {
  pinMode(led, OUTPUT) # this sets this pin to be an output.
}

<timestamp 47:23>